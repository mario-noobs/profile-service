image: golang:1.23

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/profile-service/${CI_COMMIT_TAG}"

stages:
  - build
  - upload
  - release
  - deploy

#format:
#  stage: build
#  script:
#    - test -z "$(gofmt -l ./)"

vet:
  stage: build
  script:
    - go vet -json ./... | tee vet-report.json
  artifacts:
    when: always
    paths:
      - vet-report.json
    expire_in: 1 hour

test:
  stage: build
  script:
    - go test -coverprofile=coverage.out -json ./... | tee test-report.json
  artifacts:
    when: always
    paths:
      - test-report.json
      - coverage.out
    expire_in: 1 hour

#staticcheck:
#  stage: build
#  script:
#    - go install honnef.co/go/tools/cmd/staticcheck@latest # ideally we should version pin
#    - staticcheck ./...
#
#golint:
#  stage: build
#  script:
#    - go install golang.org/x/lint/golint@latest # ideally we should version pin
#    - golint -set_exit_status ./...

build:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o profile-service .
    - mv profile-service profile-service-${CI_COMMIT_TAG}
  artifacts:
    when: always
    paths:
      - profile-service-${CI_COMMIT_TAG}
    expire_in: 1 hour

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file profile-service-${CI_COMMIT_TAG} ${PACKAGE_REGISTRY_URL}/profile-service-${CI_COMMIT_TAG}'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'release-cli create --name "profile-service-$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG --assets-link "{\"name\":\"profile-service-${CI_COMMIT_TAG}\", \"url\":\"${PACKAGE_REGISTRY_URL}/profile-service-${CI_COMMIT_TAG}\"}"'

#deploy:
#  stage: deploy
#  needs:
#    - job: build
#      artifacts: true
#  script:
#    - >
#      curl --location --output artifacts.zip
#      "${CI_API_V4_URL}/projects/10/jobs/${CI_JOB_ID}/artifacts"
#      --header "TOKEN: ${CI_JOB_TOKEN}"
#    - ls -lah
#    - cat artifacts.zip

#curl -SsfLO \
#-H 'Private-Token: <PERSONAL_ACCESS_TOKEN>' \
#  https://gitlab.com/<USER>/<REPO>/-/archive/<RELEASE_NAME>/<FILE_NAME>
